//Snake and Ladder Game
package game;
import java.util.Random;
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;
class SnakeLaderGame {
    public static final int MAX_SCORE=100;
    static Map<Integer, Integer> snake=new HashMap<Integer, Integer>();
    static Map<Integer, Integer> lader=new HashMap<Integer, Integer>();
    {
        //Starting point of snake and value as tailing point of snake
        snake.put(99,78);
        snake.put(95,75);
        snake.put(87, 24);
        snake.put(93,73);
        snake.put(54,34);
        snake.put(62,19);
        snake.put(17,7);
        snake.put(64,60);

        //Starting point of ladder and value as uppoer point of ladder
        lader.put(4,14);
        lader.put(9,30);
        lader.put(20,38);
        lader.put(28,84);
        lader.put(40,59);
        lader.put(51,67);
        lader.put(71,91);
        lader.put(63,81);
    }
    public void letsStart(){
        int player1=0,player2=0;
        int currentPlayer=-1;
        int diceValue=0;
        Scanner sc=new Scanner(System.in);
        String str;
        do{
            System.out.println(currentPlayer==-1?"\n\nFirst Player Turn":"\n\nSecond Player Turn");
            System.out.println("Presss r to roll Diece");
            str=sc.next();
        diceValue=rollDice();
            if(currentPlayer==-1)
            {
                player1=playerCalculation(player1, diceValue);
                System.out.println("Player 1 Score : "+player1+"\n"+"Player 2 Score: "+player2);
                if(isWin(player1))
                {
                    System.out.println("First Player Wins!!!");
                    return;
                }
                if(diceValue==6)
                {
                    continue;
                }
            }
            else{
                player2=playerCalculation(player2, diceValue);
                System.out.println("Player 1 Score : "+player1+"\n"+"Player 2 Score : "+player2);
                if(isWin(player2))
                {
                    System.out.println("Second Player Wins");
                    return;
                }
                if(diceValue==6)
                {
                    continue;
                }
            }
            currentPlayer=-currentPlayer;
        }
        while("r".equals(str));
    }
    public int rollDice(){
        int n=0;
        Random r=new Random();
        n=r.nextInt(7);
        return n==0?1:n;
    }
    public int playerCalculation(int player,int diceValue)
    {
        player+=diceValue;
        if(player>MAX_SCORE)
        {
            player=player-diceValue;
            return player;
        }
        if(null!=snake.get(player))
        {
            player=snake.get(player);
        }
        if(null!=lader.get(player))
        {
            player=lader.get(player);
        }
        return player;
    }
    public boolean isWin(int player)
    {
        return MAX_SCORE==player;
    }
}
public class SnakeNLaderTest{
    public static void main(String[] args) {
        SnakeLaderGame gameobj=new SnakeLaderGame();
        gameobj.letsStart();
    }
}
